#include <iostream>
#include <string>
#include <vector>
#include <map>
#include <cctype>
#include <iterator>

using namespace std;


vector <string> split (string& s){
    vector <string> ret;
    
    int i =0;
    while (i != s.size()){
        while (i != s.size() && isspace (s[i])){
            ++i;
        }
        int j = i;
        while (j != s.size() && !isspace(s[j])){
            j++;
        }
        if (i != j){
            ret.push_back(s.substr(i, j - i));
        }
        i = j;
    }

    return ret;

}

map <string, vector <int> > xref (istream& in, vector <string> find_words (string& s) = split)
{
    map <string, vector <int> > ret;
    string line;
    int line_number;
    while (getline(cin, line)){
        ++line_number;
        
        vector <string> words = split(line);
        
        for (vector <string> :: iterator iter = words.begin(); iter != words.end(); ++iter){
            ret[*iter].push_back(line_number);
        }
        
    }
    return ret;
    
    
}

int main()
{
    map <string, vector <int> > ret= xref(cin);
    
    for (map <string, vector <int> > :: iterator iter = ret.begin(); iter != ret.end(); ++iter){
        cout << iter-> first << " occurs on line: ";
        vector <int> :: iterator yo =  iter -> second.begin();  //here conflict between two iterators, vector and map. so that is why it should be fucked up.
        cout << *yo;
        ++yo;
          //what is going on here?
        while (yo != iter -> second.end()){
            
            cout << ", " << *yo;
            ++yo;
            
            
        }
        cout << endl;
        
        
    }
    
    
    return 0;
}
