#include <iostream>
#include <map>
#include <vector>
#include <iterator>

using namespace std;



vector <string> split (string& s){
    vector <string> ret;

    int i  = 0;

    while (i != s.size()){
        while (i != s.size() && isspace (s[i])){

        
        ++i;
    }
    int j = i;
    
    while (j != s.size() && !isspace(s[j]))
    {
        ++j;

    }

    if (i != j){
        ret.push_back(s.substr(i, j - i));
    }
    i = j;
    }

    return ret;

}




map <string, vector <int> > xref (istream& in, vector <string> find_words(string& s) =split){
    string line;
    int line_number;
     map <string, vector <int> > ret;
    while (getline(in, line)){
        ++line_number;
        vector <string> words = find_words(line);

        for (vector <string> :: iterator it = words.begin(); it != words.end(); ++it)
        {
            ret[*it].push_back(line_number);

        }
    }
   
    return ret;

}


int main() {

    map <string, vector <int> > ret = xref (cin, split);

    for (map <string, vector <int> > :: iterator it = ret.begin(); it != ret.end(); ++it)
    {
        cout << it -> first <<   " occurs on lines: "; 
        vector <int> nums = it -> second;
        for (int i  = 0; i != nums.size(); i++){
            cout << nums[i] << " ";
        }
        cout << endl;


    }

    return 0;

}
